https://qengineering.eu/install-opencv-4.3-on-raspberry-64-os.html


1. 버전 확인
Raspberry 64비트 OS에 OpenCV 4.3.0을 설치하기 전에 먼저 버전을 확인
uname -a 명령을 실행하고 아래 화면 덤프로 버전을 확인하였다.

확인하였을 때 버전은 64bit 였다.
=> 이전에 32bit 버전용 openCV 빌드에 사용되는 플래그를 사용하여 계속해서 cmake 오류가 났었다..
이걸로 7시간을 잡아먹었다. 
=> pip3를 사용하면 오류가 잦다. 실제로 모든 버전은 최신이 아니며 64bit 도 아니었다.
많은 시간을 할애한 결과 가장 올바른 방법은 소스에서 빌드하는 것

2. 스왑 체크
=> 원래는 체크를 해야하지만 64bit OS 를 설치했기에 따로 문제가 되지 않다고 판단하였다

3. EEPROM 검사.
라즈베리파이 3에서는 SD 카드에 모든 운영 소프트웨어가 있었지만 버전 4에서는 부분적으로 부팅된다는 것을 알았다.
그래서 필요한 경우 직접 업데이트 하여야 한다.

# to get the current status
$ sudo rpi-eeprom-update
# if needed, to update the firmware
$ sudo rpi-eeprom-update -a
$ sudo reboot


4.GPU 메모리
=> 이부분도 처음에 놓쳤던 부분이다. 물리적인 RAM은 CPU 모두에서 사용되기에 필요한 경우 직접 크기를
변경하여야한다. 우리는 최소 128Mbyte로 변경하였다.
 
 5.종속성
  => open CV 소프트웨어는 타사와 다르게 소프트웨어 라이브러리를 사용한다. 이부분을  먼저 설치하여야한다.
  어떤 것은 라즈베리파이 64비트 운영체제와 함께 제공되기도 한다지만, 우선은 다 설치하기로 했다.
  
  # check for updates (64-bit OS is still under development!)
$ sudo apt-get update
$ sudo apt-get upgrade
# dependencies
$ sudo apt-get install build-essential cmake git unzip pkg-config
$ sudo apt-get install libjpeg-dev libpng-dev
$ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
$ sudo apt-get install libgtk2.0-dev libcanberra-gtk* libgtk-3-dev
$ sudo apt-get install libxvidcore-dev libx264-dev
$ sudo apt-get install python3-dev python3-numpy python3-pip
$ sudo apt-get install libtbb2 libtbb-dev libdc1394-22-dev
$ sudo apt-get install libv4l-dev v4l-utils
$ sudo apt-get install libopenblas-dev libatlas-base-dev libblas-dev
$ sudo apt-get install liblapack-dev gfortran libhdf5-dev
$ sudo apt-get install libprotobuf-dev libgoogle-glog-dev libgflags-dev
$ sudo apt-get install protobuf-compiler

6. OpenCV를 다운로드
5번을 완료해야 본격적으로 openCV를 설치할 수 있다. 많은 시도 끝에 알았지만 버전마다의 링크가 다르기에
이 부분을 직접 . https://opencv.org/releases/ 에서 가져와서 소스코드를 넣어야한다는 것을 알았다.
=> 이전에는 그냥 뒤에 숫자만 바꾸어 넣어서 자꾸만 에러가 난 것도 있었다는 것을 알았다 ㅠㅠ

-> 다운로드 한 뒤에 압축을 풀어줘야한다

$ cd ~
$ wget -O opencv.zip https://github.com/opencv/opencv/archive/4.3.0.zip
$ wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.3.0.zip

$ unzip opencv.zip
$ unzip opencv_contrib.zip

+ 디렉토리 이름 바꿔주기 ( 우리의 편리함을 위해서 )

$ mv opencv- 4.3.0 opencv
$ mv opencv_contrib- 4.3.0 opencv_contrib

+ 가상환경은 사용하지 않을 것이다.

7. 빌드 메이크.
=> 이 부분이 가장 오래걸린 부분이다. 실제로 빌드를 설치하는 시간은 한시간 정도지만 애초에 여기까지
접근하는 것도 매우 시간이 많이 걸렸다.
=> 모든 빌드파일이 위치할 수 있는 디렉토리를 만들어야 한다.

$ cd ~/opencv/
$ mkdir build
$ cd build

그리고 아주아주 중요한 단계가 시작된다.. 

cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
        -D ENABLE_NEON=ON \
        -D WITH_FFMPEG=ON \
        -D WITH_TBB=ON \
        -D BUILD_TBB=ON \
        -D BUILD_TESTS=OFF \
        -D WITH_EIGEN=OFF \
        -D WITH_GSTREAMER=OFF \
        -D WITH_V4L=ON \
        -D WITH_LIBV4L=ON \
        -D WITH_VTK=OFF \
        -D WITH_QT=OFF \
        -D OPENCV_ENABLE_NONFREE=ON \
        -D INSTALL_C_EXAMPLES=OFF \
        -D INSTALL_PYTHON_EXAMPLES=OFF \
        -D BUILD_NEW_PYTHON_SUPPORT=ON \
        -D BUILD_opencv_python3=TRUE \
        -D OPENCV_GENERATE_PKGCONFIG=ON \
        -D BUILD_EXAMPLES=OFF ..
        
        => 우리가 이전에 자꾸 cmake 오류가 났던 것은 32비트용 빌드를 활용하였고, 
        ENABLE_VFPV3=ON 플래그 가 없었다.. 이걸 이제야 알았다
        
        
        

